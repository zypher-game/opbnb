name: Build Component Images

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
    inputs:
      customImageTag:
        description: 'Custom Docker Image Tag (keep empty for git hash)'
        required: false
        default: ''

jobs:
  prepare:
    name: Prepare Build
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
    
    steps:
      - name: Determine Image Tag
        id: image-tag
        run: |
          if [ "${{ github.event.inputs.customImageTag }}" != "" ]; then
            echo "tag=${{ github.event.inputs.customImageTag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          fi

  build-op-node:
    name: Build op-node
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/zypher-game/op-node
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=raw,value=${{ needs.prepare.outputs.image-tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./op-node/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-op-batcher:
    name: Build op-batcher
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/zypher-game/op-batcher
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=raw,value=${{ needs.prepare.outputs.image-tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./op-batcher/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-op-proposer:
    name: Build op-proposer
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/zypher-game/op-proposer
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=raw,value=${{ needs.prepare.outputs.image-tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./op-proposer/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-op-bootnode:
    name: Build op-bootnode
    needs: prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/zypher-game/op-bootnode
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=raw,value=${{ needs.prepare.outputs.image-tag }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./op-bootnode/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max 